<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>동적 폼 전송</title>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <!-- 아래 cdn은 axios 사용을 위한 것 -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  </head>
  <body>
    <form name="register">
      <input type="text" name="id" placeholder="ID" value="lilyyy" pattern="^[a-z0-9]{5,}$" title="소문자, 숫자를 이용하여 5글자 이상" required />
      <input type="password" name="pw" placeholder="password" value="1234" />
      <input type="text" name="name" placeholder="이름" value="lily" required />
      <div>
        <button type="button" onclick="axiosPost()">axios post 전송</button>
      </div>
      <!-- 아래 두 줄은 일발(동기) 폼 전송 할 때 type submit-->
      <!-- <input type="submit" /> -->
      <!-- <button type="submit">제출</button> -->
    </form>
    <h3 id="result"></h3>

    <script>
      // --------------------form 태그의 데이터 받아오기(유효성 검사 포함)-------------------
      function getData() {
        const form = document.forms['register'];

        if (!form.checkValidity()) {
          // checkValidity 폼의 유효성 검사를 해서 boolean 값 반환
          form.reportValidity(); // reportValidity: 유효성 검사를 통과하지 못 한 input에 대해 report
          return false;
        }

        // getData라는 함수의 반환값은 총 2가지 형태
        // false | object (객체 형태)

        const data = {
          id: form.id.value,
          pw: form.pw.value,
          name: form.name.value,
        };

        return data;
      }
      // --------------------------------------------------------------------------------




      // -------------------- axios Post --------------------
      async function axiosPost() {
        // 동적 폼 전송
        // 폼 유효성 검사도 하고 싶음.
        // 폼 유효성 검사를 input 태그의 pattern, minlength, required 등의 속성을 이용하여 하고 싶음

        // input 태그의 pattern, minlength, required 이 속성은 form의 "submit" 이 일어날 때 동작함.
        // 동적 폼 전송은 form 의 "submit" 을 이용하는 게 아님.
        // 따라서, javascript 코드 내에서 폼 유효성 검사를 하는 코드를 작성해야함.
        // 방법 1)
        // const regex = /^[a-z0-9]{5,}$/
        // regex.test(form.id.value)
        // 방법 2)
        // form.checkVaildity()와 form.reportVaildity() 를 이용해서 input에 작성된 유효성을 검증

        const data = getData();
        // data에 받아오는 값은 두가지 형태 중 하나
        // false | object (객체 형태)
        if (!data) return;

        const res = await axios({
          method: 'POST',
          url: '/axios',
          data: data, // post일 경우 서버에 데이터를 보낼 때, data 키에 담아서 보내면 됨.
        });

        console.log('res', res);
        console.log('res.data', res.data);
        $('#result').html(`axios post 요청 성공 ${res.data.name}님 환영합니다.`);

        // axios({
        //   method: "POST",
        //   url: "/axios",
        //   data: data,
        // }).then((res) => {
        //   console.log(res.data)
        //   const {
        //     name
        //   } = res.data
        //   $("#result").html(`axios post 요청 성공 ${name}님 환영합니다.`)
        // })
      }

      // --------------------------------------------------
    </script>
  </body>
</html>